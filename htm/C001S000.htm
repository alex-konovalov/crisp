<html><head><title>[CRISP] 1 Introduction</title></head>
<body text="#000000" bgcolor="#ffffff">
<a name = "I0"></a>
<h1>1 Introduction</h1><p>
<p>
<a name = "I1"></a>

The share package CRISP provides algorithms for computing subgroups of
finite solvable groups related to a group class&nbsp;<font size="+1"><font face="helvetica"><i>C</i></font></font>. In particular, it
allows to compute <font size="+1"><font face="helvetica"><i>C</i></font></font>-radicals and <font size="+1"><font face="helvetica"><i>C</i></font></font>-injectors for
Fitting classes (and Fitting sets) <font size="+1"><font face="helvetica"><i>C</i></font></font>, <font size="+1"><font face="helvetica"><i>C</i></font></font>-residuals
for formations <font size="+1"><font face="helvetica"><i>C</i></font></font>, and <font size="+1"><font face="helvetica"><i>C</i></font></font>-projectors for Schunck
classes <font size="+1"><font face="helvetica"><i>C</i></font></font>. In order to carry out these computations, the group class
<font size="+1"><font face="helvetica"><i>C</i></font></font> must be represented by an algorithm which can decide membership in
the group class. Moreover, additional information about the class can be
supplied to speed up computations, sometimes considerably. This information
may consist of other classes (such as the characteristic of the class), or of
additional algorithms, for instance for the computation of residuals and
local residuals, radicals, or for testing membership in related classes
(such as the basis or boundary of a Schunck class).
<p>
Moreover, the present package contains algorithms for the computation of
normal subgroups belonging to a given group class, including an improved
method to compute the set of all normal subgroups of a finite solvable
group. CRISP also provides basic support for classes (in
the set theoretical sense). The algorithms used are described in <a href="biblio.htm#Hof99"><cite>Hof99</cite></a>, a
preprint of which is included in the <code>doc</code> folder of the package (file <code>crisp.dvi</code>). 
<p>
<font size="+1"><font face="helvetica"><i>C</i></font></font>-projectors and <font size="+1"><font face="helvetica"><i>C</i></font></font>-injectors of finite solvable groups
arise as generalisations of Sylow and Hall subgroups, and have attracted
considerable interest. They were first studied
by Gasch&uuml;tz&nbsp;<a href="biblio.htm#Gas63"><cite>Gas63</cite></a>, Schunck&nbsp;<a href="biblio.htm#Sch67"><cite>Sch67</cite></a>, and Fischer,
Gasch&uuml;tz and Hartley&nbsp;<a href="biblio.htm#FGH67"><cite>FGH67</cite></a>. In particular, <font size="+1"><font face="helvetica"><i>C</i></font></font>-injectors only exist in any finite solvable group if the group class
<font size="+1"><font face="helvetica"><i>C</i></font></font> is a Fitting class. Similarly, <font size="+1"><font face="helvetica"><i>C</i></font></font>-projectors exist in any
finite group&nbsp;<font size="+1"><i>G</i></font> if and only if <font size="+1"><font face="helvetica"><i>C</i></font></font> is a Schunck class. An extensive
account of the subject can be found in&nbsp;<a href="biblio.htm#DH92"><cite>DH92</cite></a>.
<p>
In the case when the class <font size="+1"><font face="helvetica"><i>C</i></font></font> in question is a local formation (which is
a special kind of Schunck class), algorithms for dealing with <font size="+1"><font face="helvetica"><i>C</i></font></font>-projectors and related subgroups of finite solvable groups are available
also in the <font face="helvetica,arial">GAP</font> share package FORMAT indexFORMAT share package by Eick and
Wright; see also&nbsp;<a href="biblio.htm#EW99"><cite>EW99</cite></a>. In order to use their methods, <font size="+1"><font face="helvetica"><i>C</i></font></font> has to
be described in terms of algorithms for the computation of residuals with
respect to an integrated local function for <font size="+1"><font face="helvetica"><i>C</i></font></font>.
<p>
The author would like to thank J.&nbsp;Neub&uuml;ser and the Lehrstuhl D f&uuml;r
Mathematik, RWTH Aachen, for an invitation, which made it possible to develop a first
version of the algorithm for the computation of projectors. He is indebted to the GAP
team, particularly Bettina Eick and Alexander Hulpke, for its advice, and to the
anonymous referee, J.&nbsp;Neub&uuml;ser, and C.&nbsp;R.&nbsp;B. Wright for their detailed comments
on previous versions of CRISP.
<p>
[<a href="index.htm">Top</a>] [<a href = "chapters.htm">Up</a>] [<a href ="C002S000.htm">Next</a>] [<a href = "theindex.htm">Index</a>]
<P>
<address>CRISP manual<br>November 2000
</address></body></html>