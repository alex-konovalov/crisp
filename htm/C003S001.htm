<html><head><title>[CRISP] 3.1 Creating group classes</title></head>
<body text="#000000" bgcolor="#ffffff">
<a name = "I1"></a>
<h1>3.1 Creating group classes</h1><p>
<p>
<a name = "I2"></a>

Group classes can either be defined by a function deciding membership, or
alternatively by a (finite) list of groups containing at least one
representative of each isomorphism type of groups contained in the class.
<p>
<a name = "I3"></a>
<li><code>GroupClass(</code><var>rec</var><code>) O</code>
<li><code>GroupClass(</code><var>func</var><code>) O</code>
<li><code>GroupClass(</code><var>group-list</var><code>) O</code>
<li><code>GroupClass(</code><var>group-list</var><code>, </code><var>iso-func</var><code>) O</code>
<p>
The function <code>GroupClass</code> returns a new group class <var>class</var>, specified by its
argument(s).
<p>
In the first form, <var>rec</var> must be a record which has a component <code>\in</code>, and may have
further components <code>name</code>, and  <code>char</code>. <code>\in</code> must be a function having one argument.
When called with a group <var>G</var> as its argument, it must return <code>true</code> or <code>false</code>,
depending upon whether <var>G</var> is in <var>class</var> or not. It is the user's
responsibility to ensure that the function supplied returns the same value
when called with isomorphic groups. If <var>rec</var> has components  <code>name</code> or 
<code>char</code>, their values are stored in the attributes <code>Name</code> (see <a href="../../../doc/htm/ref/C012S008.htm">Name</a>)
and <code>Characteristic</code> (see <a href="C003S004.htm">Characteristic</a>) of <var>class</var>.
<p>
<code>GroupClass(</code><var>func</var><code>)</code> is a shorthand for <code>GroupClass(rec(\in := func))</code>.
<p>
In the other cases, <code>GroupClass</code> returns the group
class consisting of the isomorphism classes of the groups in the list
<var>group-list</var>. If <var>iso-func</var> is
given, <var>iso-func</var> is used to check whether a given group <var>G</var> is isomorphic
with one of the groups in the defining list. <var>iso-func</var> must have two
arguments, and must return true if two groups, one of which is in
<var>group-list</var>, passed as arguments are isomorphic, and false otherwise. If
<var>iso-func</var> is not given, the <font face="helvetica,arial">GAP</font> function <code>IsomorphismGroups</code> is used for
the isomorphism test. Note that even for relatively small groups,
<code>IsomorphismGroups</code> tends to be very slow. 
<p>
<pre>
gap&gt; GroupClass(IsNilpotent);
GroupClass (in:=&lt;Operation "IsNilpotent"&gt;)
gap&gt; GroupClass([CyclicGroup(2), CyclicGroup(3)]);
GroupClass ([ &lt;pc group of size 2 with 1 generators&gt;, 
  &lt;pc group of size 3 with 1 generators&gt; ])
gap&gt; AbelianIsomorphismTest := function (A,B)
&gt;     if IsAbelian (A) then
&gt;         if IsAbelian (B) then
&gt;             return AbelianInvariants (A) = AbelianInvariants (B);
&gt;         else
&gt;             return false;
&gt;         fi;
&gt;     elif IsAbelian (B) then
&gt;         return false;
&gt;     else # this will not happen if called from GroupClass
&gt;         Error ("At least one of the groups &lt;A&gt; and &lt;B&gt; must be abelian");
&gt;     fi;
&gt; end;
function( A, B ) ... end
gap&gt; cl := GroupClass ([AbelianGroup ([2,2]), AbelianGroup ([3,5])],
&gt; AbelianIsomorphismTest);
GroupClass ([ &lt;pc group of size 4 with 2 generators&gt;, 
  &lt;pc group of size 15 with 2 generators&gt; ], function( A, B ) ... end)
gap&gt; Group ((1,2), (3,4)) in cl;
true
</pre>
<p>
<a name = "I7"></a>
<li><code>Intersection(</code><var>list</var><code>)</code>
<li><code>Intersection(</code><var>C_1</var><code>, </code><var>C_2</var><code>, ..., </code><var>C_n</var><code>)</code>
<p>
The intersection of a list <var>list</var> of group classes resp. of the group
classes <var>C_1</var>, <var>C_2</var>, ..., <var>C_n</var> is again
a group class. The intersection automatically has those closure properties
(see <a href="C003S002.htm">Properties of group classes</a>) which all of the intersected classes
have. 
<p>
[<a href="index.htm">Top</a>] [<a href = "C003S000.htm">Up</a>] [<a href ="C003S002.htm">Next</a>] [<a href = "theindex.htm">Index</a>]
<P>
<address>CRISP manual<br>November 2000
</address></body></html>