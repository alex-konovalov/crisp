<html><head><title>[crisp] 4.6 Functions for normal subgroups related to residuals</title></head>
<body bgcolor="ffffff">
<a name = "I34"></a>
<h1>4.6 Functions for normal subgroups related to residuals</h1><p>
<p>
<a name = "I35"></a>

<a name = "I36"></a>
<li><code>OneNormalSubgroupMinWrtQProperty(</code><var>grp</var><code>, </code><var>pretest</var><code>, </code><var>test</var><code>, </code><var>data</var><code>) O</code>
<p>
Let <var>cal X</var> be a set of normal subgroups of <var>grp</var> containing <var>grp</var>, and
assume that whenever
<var>M</var> and <var>N</var> are normal subgroups with <var>M  in  cal X</var> and <var>M</var>
contained in <var>N</var>, then also <var>N  in  cal X</var>. Then
<code>OneNormalSubgroupMinWrtQProperty</code> computes a normal subgroup <var>M  in  cal X</var>
such that no normal subgroup of <var>grp</var> contained in <var>M</var> belongs to <var>cal X</var>. 
At present, there exist only methods for finite solvable groups <var>grp</var>.
<p>
The class <var>cal X</var> is described by two functions, <var>pretest</var> and <var>test</var>. 
<p>
<var>pretest</var> is a function taking four arguments, <var>U</var>, <var>V</var>, <var>R</var>, and <var>data</var>,
where <var>data</var> is just the argument passed to
<code>OneNormalSubgroupMinWrtQProperty</code> (see below for examples). <var><var>U</var>/<var>V</var></var> is a
chief factor of <var>grp</var>, and  <var>R</var> is a normal subgroup of <var>grp</var> containing <var>U</var>
which is known to belong to
<var>cal X</var>.
<p>
<var>pretest</var> may return the values <code>true</code>, <code>false</code>, or <code>fail</code>. If it returns 
<code>true</code>, every normal subgroup <var>N</var> of <var>grp</var> such that <var>V</var> is
contained in <var>N</var> and <var><var>R</var>/<var>N</var></var> is
<var>G</var>-isomorphic with <var><var>U</var>/<var>V</var></var> must belong to <var>cal X</var>. If it returns
<code>false</code>, no such normal subgroup&nbsp;<var>N</var> may belong to <var>cal X</var>. 
<p>
<var>test</var> is a function taking three arguments, <var>S</var>, <var>R</var>, and <var>data</var>, where
data has been described above. <var>R</var> is a normal subgroup of <var>grp</var> belonging to
<var>cal X</var>, and <var><var>R</var>/<var>S</var></var> is a chief factor of <var>grp</var>. The function must return
true if <var>S</var> belongs to <var>cal X</var>, and false otherwise. 
<p>
Note that whenever <code></code><var>test</var><code>(</code><var>S</var><code>, </code><var>R</var><code>, </code><var>data</var><code>)</code> is called, 
<code></code><var>pretest</var><code>(</code><var>U</var><code>, </code><var>V</var><code>, </code><var>R</var><code>, </code><var>data</var><code>)</code> has been called before, and has returned
<code>fail</code>, where  <var><var>U</var>/<var>V</var></var> is a  chief factor which is <var>G</var>-isomorphic with
<var><var>R</var>/<var>S</var></var>. Thus <var>test</var> need not repeat tests which have been performed by
<var>pretest</var>. In particular, if <var>pretest</var> always returns <code>true</code> or <code>false</code>,
<var>test</var> will never be called.
<p>
<var>data</var> is never used or changed by <code>OneNormalSubgroupMinWrtQProperty</code>, but
exists only as a means for passing additional information to or between
the functions <var>pretest</var> and <var>test</var>.
<p>
For example, if <var>cal C</var> is a group class which is closed with respect to
factor groups and <var>cal X</var> is the set of all normal subgroups <var>N</var> of <var>grp</var>
with <var><var>grp</var>/N  in  cal C</var>, then <var>cal X</var> satisfies the above properties. In
particular, if <var>cal C</var> is a formation, then
<code>OneNormalSubgroupMinWrtQProperty</code> will return the <var>cal C</var>-residual of
<var>grp</var>.
<p>
The following example shows how to use <code>OneNormalSubgroupMinWrtQProperty</code> to
compute the derived subgroup of a group <var>G</var>. (Note that in practise, this 
is not a particularly efficient way of computing the derived subgroup.)
<p>
<pre>
gap&gt; G := DirectProduct (SL(2,3), CyclicGroup (2));;
gap&gt; data := rec (gens := SmallGeneratingSet (G),
&gt;    comms := List (Combinations (SmallGeneratingSet (G), 2), 
&gt;       x -&gt; Comm (x[1],x[2])));;
gap&gt; OneNormalSubgroupMinWrtQProperty (
&gt;    G,
&gt;    function (U, V, R, data) # test if U/V is central in G
&gt;        if ForAny (ModuloPcgs (U, V), y -&gt;
&gt;           ForAny (data.gens, x -&gt; not Comm (x, y) in V)) then 
&gt;           return false;
&gt;        else
&gt;           return fail;
&gt;        fi;
&gt;     end,
&gt;     function (S, R, data)
&gt;        return ForAll (data.comms, x -&gt; x in S);
&gt;     end,
&gt;     data) = DerivedSubgroup (G); # compare results
true
</pre>
<p>
<a name = "I37"></a>
<li><code>AllNormalSubgroupsWithQProperty(</code><var>grp</var><code>, </code><var>pretest</var><code>, </code><var>test</var><code>, </code><var>data</var><code>) O</code>
<p>
<code>AllNormalSubgroupsWithQProperty</code> returns a list consisting of all normal
subgroups in <var>cal X</var>, where <var>cal X</var> is the class defined by <var>pretest</var>,
<var>test</var>, and <var>data</var>, as described for <code>OneNormalSubgroupMaxWrtNProperty</code>. 
At present, there exist only methods for finite solvable groups <var>grp</var>.
<p>
<pre>
gap&gt; normsWithSupersolvableFactorGroups :=
&gt; AllNormalSubgroupsWithQProperty (GL(2,3),
&gt;    function (U, V, R, data)
&gt;       return IsPrimeInt (Index (U, V));
&gt;    end,
&gt;    ReturnFail, # pretest is sufficient
&gt;    fail); # no data required
[ GL(2,3), 
  Group([ [ [ Z(3)^0, Z(3) ], [ 0*Z(3), Z(3)^0 ] ], [ [ Z(3), Z(3)^0 ], 
          [ Z(3)^0, Z(3)^0 ] ], [ [ 0*Z(3), Z(3)^0 ], [ Z(3), 0*Z(3) ] ], 
      [ [ Z(3), 0*Z(3) ], [ 0*Z(3), Z(3) ] ] ]), 
  Group([ [ [ Z(3), Z(3)^0 ], [ Z(3)^0, Z(3)^0 ] ], 
      [ [ 0*Z(3), Z(3)^0 ], [ Z(3), 0*Z(3) ] ], 
      [ [ Z(3), 0*Z(3) ], [ 0*Z(3), Z(3) ] ] ]) ]
</pre>
<p>
<a name = "I38"></a>
<li><code>NormalSubgroups(</code><var>grp</var><code>) A</code>
<p>
CRISP also provides an improved method for <code>NormalSubgroups</code> (see
<a href="../../../doc/htm/ref/C036S018.htm">NormalSubgroups</a>) for groups <var>grp</var> which are finite and  solvable.
This method simply calls <code>AllNormalSubgroupsWithQProperty</code> (with <code>ReturnTrue</code>
as <var>pretest</var> and <code>ReturnFail</code> as <var>test</var>). Note that, since
<var>pretest</var> always returns <code>true</code>, <var>test</var> is never actually called.
This is usually significantly faster than the methods in the <font face="helvetica,arial">GAP</font> library.
<p>
[<a href ="C004S005.htm">Previous</a>] [<a href = "C004S000.htm">Up</a>] [<a href = "theindex.htm">Index</a>]
<P>
<address>GAP 4 manual<br>November 2000
</address></body></html>